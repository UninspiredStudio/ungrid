import { __assign } from '../_virtual/_tslib.js';
import classNames from '../external/classnames/index.js';
import { createTailwindMerge, getDefaultConfig } from '../packages/subframe-core/external/tailwind-merge/dist/bundle-mjs.js';

function createTwClassNames(subframeFontMixins) {
    var customTWMerge = createTailwindMerge(function () {
        var defaultConfig = getDefaultConfig();
        return __assign(__assign({}, defaultConfig), { classGroups: __assign(__assign({}, defaultConfig.classGroups), { 
                // "subframe-colors": [{ text: [isTextColor] }],
                "subframe-font-mixins": subframeFontMixins }), conflictingClassGroups: {
                // font colors
                // "text-color": ["subframe-colors"],
                // font mixins
                "subframe-font-mixins": ["font-size", "leading", "font-weight"],
                "font-size": ["subframe-font-mixins"],
                leading: ["subframe-font-mixins"],
                "font-weight": ["subframe-font-mixins"],
            } });
    });
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return customTWMerge(classNames.apply(void 0, args));
    };
}
// TODO: Remove. Going forward this is generated into a utils.ts file.
var twClassNames = createTwClassNames([
    // old font mixins
    "text-label",
    "text-label-bold",
    "text-body",
    "text-body-bold",
    "text-subheader",
    "text-section-header",
    "text-header",
    "text-monospace-body",
    // new font mixins
    "text-caption",
    "text-caption-bold",
    "text-heading-3",
    "text-heading-2",
    "text-heading-1",
]);

export { createTwClassNames, twClassNames };
